AWSTemplateFormatVersion: '2010-09-09'

Parameters:
  EnvironmentName:
    Type: String
    Default: dev

  LambdaRuntime:
    Type: String
    Description: Lambda runtime version
    Default: nodejs22.x
    AllowedValues:
      - nodejs22.x
      - nodejs20.x

  CodeVersion:
    Type: String

  BucketName:
    Type: String

Resources:
  LayerVersion:
    Type: AWS::Lambda::LayerVersion
    Properties:
      LayerName: !Sub "nodejs-layer-${EnvironmentName}"
      Content:
        S3Bucket: !Ref BucketName
        S3Key: !Sub "layer-${CodeVersion}.zip"
      CompatibleRuntimes:
        - nodejs22.x
        - nodejs20.x
      CompatibleArchitectures:
        - x86_64
        - arm64
    DeletionPolicy: Delete

  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "lambda-layer-playground-execution-role-${EnvironmentName}"
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole
      Policies:
        - PolicyName: lambda-additional-permissions
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: !Sub 'arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/*'
    DeletionPolicy: Delete

  LogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub '/aws/lambda/lambda-layer-playground-function-${EnvironmentName}'
      RetentionInDays: 7
    DeletionPolicy: Delete

  Function:
    Type: AWS::Lambda::Function
    DependsOn: LogGroup
    Properties:
      FunctionName: !Sub "lambda-layer-playground-function-${EnvironmentName}"
      Runtime: !Ref LambdaRuntime
      Handler: index.handler
      Role: !GetAtt LambdaExecutionRole.Arn
      Code:
        S3Bucket: !Ref BucketName
        S3Key: !Sub 'function-${CodeVersion}.zip'
      Layers:
        - !Ref LayerVersion
      Timeout: 30
      MemorySize: 256
      Architectures:
        - x86_64
      Environment:
        Variables:
          NODE_ENV: production
          LOG_LEVEL: info
